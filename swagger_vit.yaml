swagger: "2.0"
info:
  version: "1.0.0"
  title: "Swagger AFTPMSOV Documentation"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "matvey.lyakh@accenture.com"
host: "localhost:3000"
schemes:
  - "http"
paths:
  /user/config/language/list:
    get:
      tags:
        - "language"
      summary: "Get a list of languages"
      description: ""
      operationId: "getLanguageList"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/LanguageList"
        "400":
          description: "Bad Request"
  /user/config/timezone/list:
    get:
      tags:
        - "timezone"
      summary: "Get a list of timezones"
      description: ""
      operationId: "getTimezoneList"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/TimezoneList"
        "400":
          description: "Bad Request"
  /user/config/reminder/initial/data:
    get:
      tags:
        - "reminder initial data"
      summary: "Get a initial dat of reminder"
      description: ""
      operationId: "getReminderInitialData"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ReminderInitialData"
        "400":
          description: "Bad Request"
  /user/{userID}/reminder/set:
    post:
      tags:
        - "user"
      summary: "Set a user reminder data"
      description: "Set a user reminder data"
      operationId: "setReminderUserData"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "path"
          name: "userID"
          type: "string"
          required: true
          description: "User ID to set reminder data"
        - in: "body"
          name: "body"
          description: "Set reminder data to user"
          schema:
            $ref: "#/definitions/SetReminderSchemaResponse"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SetReminderSchema"
        "400":
          description: "Bad Request"
  /user/{userID}/reminder/data:
    get:
      tags:
        - "user"
      summary: "Get a reminder data for current user"
      description: "Get a reminder data for current user"
      operationId: "getUserReminderData"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: path
          name: userID
          type: string
          required: true
          description: User ID.
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UserReminder"
        "400":
          description: "Bad request"
  /user/language/{langID}/subscription/{emailTypeID}:
    get:
      tags:
        - "user"
      summary: "Get a subscription language description"
      description: "Get a subscription language description"
      operationId: "getSubscriptionDescription"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: path
          name: langID
          type: string
          required: true
          description: Language ID.
        - in: path
          name: emailTypeID
          type: string
          required: true
          description: Email type ID.
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/LanguageSubscriptionResponse"
        "400":
          description: "Bad Request"
    put:
      tags:
        - "user"
      summary: "Update a subscription language description"
      description: "Update a subscription language description"
      operationId: "updateSubscriptionDescription"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: path
          name: langID
          type: string
          required: true
          description: Language ID.
        - in: path
          name: emailTypeID
          type: string
          required: true
          description: Email type ID.
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/LanguageSubscriptionResponse"
        "400":
          description: "Bad Request"
  /user/{userID}/avatar/upload:
    post:
      tags:
        - "user"
      summary: Upload avatar to user
      consumes:
        - "multipart/form-data"
      parameters:
        - in: "formData"
          name: "image"
          type: "file"
          description: "The file to upload"
          required: true
        - in: "path"
          name: "userID"
          type: "string"
          required: true
          description: "User ID to set reminder data"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UploadAvatarSchema"
        "400":
          description: "Bad Request"
  /user/{userID}/avatar/get:
    get:
      tags:
        - "user"
      summary: "Get user avatar"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: path
          name: userID
          type: string
          required: true
          description: User ID.
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/GetAvatarSchema"
        "400":
          description: "Bad Request"
  /user/{userID}/subscription/{emailTypeID}:
    get:
      tags:
        - "user"
      summary: "Get a subscription status"
      description: "Get a subscription status"
      operationId: "getSubscription"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: path
          name: userID
          type: string
          required: true
          description: User ID.
        - in: path
          name: emailTypeID
          type: string
          required: true
          description: Email type ID.
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SubscriptionResponse"
        "400":
          description: "Bad Request"
    put:
      tags:
        - "user"
      summary: "Update a subscription status"
      description: "Update a subscription status"
      operationId: "updateSubscription"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: path
          name: userID
          type: string
          required: true
          description: User ID.
        - in: path
          name: emailTypeID
          type: string
          required: true
          description: Email type ID.
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SubscriptionResponse"
        "400":
          description: "Bad Request"
  /user/mail/list:
    get:
      tags:
        - "user"
      summary: "List settings toggle items"
      description: "List settings toggle items"
      operationId: "listEmails"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ListEmailsResponse"
        "400":
          description: "Bad Request"
  /user/mail/{emailTypeID}:
    get:
      tags:
        - "user"
      summary: "Get mail type description"
      description: "Get mail type description"
      operationId: "getEmailsType"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: path
          name: emailTypeID
          type: string
          required: true
          description: Email type ID.
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ToggleSettingItemResponse"
        "400":
          description: "Bad Request"
    put:
      tags:
        - "user"
      summary: "Get mail type description"
      description: "Get mail type description"
      operationId: "updateEmailsType"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: path
          name: emailTypeID
          type: string
          required: true
          description: Email type ID.
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ToggleSettingItemResponse"
        "400":
          description: "Bad Request"
  /user/{userID}/role/list:
    get:
      tags:
        - "user"
      summary: "Get users eligible roles"
      description: "Get users eligible roles"
      operationId: "getUserEligibleRoles"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: path
          name: userID
          type: string
          required: true
          description: User ID.
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/EligibleRolesResponse"
        "400":
          description: "Bad Request"
  /user/{userID}/completed-learning-path/list:
    get:
      tags:
        - "completed learning path"
      summary: "Get list of complete learning path for user"
      description: ""
      operationId: "getCompleteLearningPathList"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/json"
        - "application/xml"
      parameters: 
        - in: path
          name: userID
          type: string
          required: true
          description: User ID.
      responses:
        "200":
          description: "Retrieved complete learning path list successfully."
          schema:
            $ref: "#/definitions/LearningPathResponse"
        "400":
          description: "Bad Request"
  /user/{userID}/completed-learning-path:
    post:
      tags:
        - "completed learning path"
      summary: "Add complete learning path for user"
      description: ""
      operationId: "addCompleteLearningPath"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - in: "path"
          name: "userID"
          type: "string"
          required: true
          description: "User ID to set complete learning path"
        - in: "body"
          name: "body"
          description: "Set complete learning path data"
          schema:
            $ref: "#/definitions/LearningPathItem"
      responses:
        "200":
          description: "Saved complete learning path successfully."
          schema:
            $ref: "#/definitions/LearningPathResponse"
        "400":
          description: "Bad Request"
  /user/{userID}/count-user/completed-learning:
    get:
      tags:
        - "completed learning"
      summary: "Get complete learning for user"
      description: ""
      operationId: "getLearningCompleted"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/json"
        - "application/xml"
      parameters: 
        - in: path
          name: userID
          type: string
          required: true
          description: User ID.
      responses:
        "200":
          description: "Retrieved complete learning successfully."
          schema:
            $ref: "#/definitions/CompletedLearningResponse"
        "400":
          description: "Bad Request"
    post:
      tags:
        - "completed learning"
      summary: "Add complete learning for user"
      description: ""
      operationId: "addLearningCompleted"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - in: "path"
          name: "userID"
          type: "string"
          required: true
          description: "User ID to set complete learning"
        - in: "body"
          name: "body"
          description: "Set complete learning data"
          schema:
            $ref: "#/definitions/CompletedLearningItem"
      responses:
        "200":
          description: "Saved complete learning successfully."
          schema:
            $ref: "#/definitions/CompletedLearningResponse"
        "400":
          description: "Bad Request"
definitions:
  CompletedLearningItem:
    type: "object"
    properties:
      disLn:
        type: "number"
        example: 10
      lnCmp:
        type: "number"
        example: 20
      lnCmpTotal:
        type: "number"
        example: 30
      PK:
        type: "string"
        example: "COUNT#USR#ID#1"
      SK:
        type: "string"
        example: "CMPLT#LRNG#"
  CompletedLearningResponse:
    type: "object"
    properties:
      result:
        type: "boolean"
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/CompletedLearningItem"
  LearningPathItem:
    type: "object"
    properties:
      learningPathID:
        type: "string"
        example: "LP00001"
      title:
        type: "string"
        example: "example title"
      desc:
        type: "string"
        example: "example desc"
      skillID:
        type: "string"
        example: "SK00001"
      proficienceID:
        type: "string"
        example: "P00001"
      image:
        type: "string"
        example: "example url image"
      order:
        type: "number"
        example: 10
      curator_id:
        type: "number"
        example: 1
      publisheddate:
        type: "string"
        example: "2021-06-30T19:29:56.820Z"
      currentstatus_id:
        type: "number"
        example: 1
      lastupdateddate:
        type: "string"
        example: "2021-06-30T19:29:56.820Z"
      firstpublisheddate:
        type: "string"
        example: "2021-06-30T19:29:56.820Z"
      PK:
        type: "string"
        example: "LRNG#PATH#ID#LP00001"
      SK:
        type: "string"
        example: "ID#LP00001"
  LearningPathResponse:
    type: "object"
    properties:
      result:
        type: "boolean"
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/LearningPathItem"
  GetAvatarSchema:
    type: "object"
    properties:
      result:
        type: "boolean"
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/GetAvatarSchemaResponse"
  GetAvatarSchemaResponse:
    type: "object"
    properties:
      name:
        type: "string"
        example: "avatar"
      metaData:
        type: "object"
      uri:
        type: "string"
        example: "www.google.com"
      PK:
        type: "string"
        example: "IMG#9d89d5e3-ef80-4746-92f2-e9bacc6a8932"
      SK:
        type: "string"
        example: "ID#"
  UploadAvatarSchema:
    type: "object"
    properties:
      result:
        type: "boolean"
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/UploadAvatarSchemaResponse"

  UploadAvatarSchemaResponse:
    type: "object"
    properties:
      name:
        type: "string"
        example: "avatar"
      metaData:
        type: "object"
      uri:
        type: "string"
        example: "www.google.com"
      PK:
        type: "string"
        example: "IMG#9d89d5e3-ef80-4746-92f2-e9bacc6a8932"
      SK:
        type: "string"
        example: "ID#"
      imgId:
        type: "string"
        example: "9d89d5e3-ef80-4746-92f2-e9bacc6a8932.png"
  UserReminder:
    type: "object"
    properties:
      result:
        type: "boolean"
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/UserReminderResponse"
  UserReminderResponse:
    type: "object"
    properties:
      delivery:
        type: "string"
        example: "download"
      rType:
        type: "string"
        example: "2"
      reminderID:
        type: "string"
        example: "1"
      rLink:
        type: "string"
        example: "www.google.com"
      rDays:
        type: "string"
        example: "Monday"
      endDate:
        type: "string"
        example: "2021-12-31T00:00:00"
      endTime:
        type: "string"
        example: "+3"
      startTime:
        type: "string"
        example: "true"
      startDate:
        type: "string"
        example: "2021-06-04T15:30:00"
      PK:
        type: "string"
        example: "USR#ID#4"
      SK:
        type: "string"
        example: "ID#4"
      reminderTypeList:
        type: "array"
        items:
          $ref: "#/definitions/UserReminderTypeList"
  UserReminderTypeList:
    type: "object"
    properties:
      PK:
        type: "string"
        example: "USR#ID#4"
      SK:
        type: "string"
        example: "ID#4"
      reminderType:
        type: "string"
        example: "1"
      label:
        type: "string"
        example: "Everyday"
      fields:
        type: "object"
  EligibleRoleItem:
    type: "object"
    properties:
      skillID:
        type: "string"
        example: "1"
      pLevel:
        type: "number"
        example: 1
      points:
        type: "number"
        example: 1
      tgtLevel:
        type: "number"
        example: 1
      tgtDate:
        type: "number"
        example: 1623874952682
      PK:
        type: "string"
        example: "USR#ID#1"
      SK:
        type: "string"
        example: "SKILL#ID#1"
  EligibleRolesResponse:
    type: "object"
    properties:
      result:
        type: "boolean"
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/EligibleRoleItem"
  ToggleSettingItem:
    type: "object"
    properties:
      emailID:
        type: "string"
        example: "1"
      status:
        type: "boolean"
        example: "true"
      PK:
        type: "string"
        example: "USR#ID#1"
      SK:
        type: "string"
        example: "SUBS#EMAIL#TYPE#1"
  ListEmailsResponse:
    type: "object"
    properties:
      result:
        type: "boolean"
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ToggleSettingItem"
  ToggleSettingItemResponse:
    type: "object"
    properties:
      result:
        type: "boolean"
      message:
        type: "string"
      data:
        $ref: "#/definitions/ToggleSettingItem"
  Subscription:
    type: "object"
    properties:
      result:
        type: "boolean"
      message:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            emailID:
              type: "string"
              example: "1"
            status:
              type: "boolean"
              example: "true"
            PK:
              type: "string"
              example: "USR#ID#1"
            SK:
              type: "string"
              example: "SUBS#EMAIL#TYPE#1"
  SubscriptionResponse:
    type: "object"
    properties:
      result:
        type: "boolean"
      message:
        type: "string"
      data:
        $ref: "#/definitions/Subscription"
  LanguageSubscription:
    type: "object"
    properties:
      typeID:
        type: "string"
        example: "1"
      label:
        type: "string"
        example: "some"
      desc:
        type: "string"
        example: "some"
      PK:
        type: "string"
        example: "LANG#ID#1"
      SK:
        type: "string"
        example: "EMAIL#TYPE#1"

  LanguageSubscriptionResponse:
    type: "object"
    properties:
      result:
        type: "boolean"
      message:
        type: "string"
      data:
        $ref: "#/definitions/LanguageSubscription"
  LanguageList:
    type: "object"
    properties:
      result:
        type: "boolean"
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/LanguageListResponse"

  LanguageListResponse:
    type: "object"
    properties:
      langID:
        type: "string"
        example: "1"
      default:
        type: "boolean"
        example: "true"
      lCode:
        type: "string"
        example: "1"
      country:
        type: "string"
        example: "USA"
      lName:
        type: "string"
        example: "English"
      SK:
        type: "string"
        example: "2"
      PK:
        type: "string"
        example: "LANGUAGE#"
      rtl:
        type: "string"
        example: "left"
    xml:
      name: "LanguageList"

  TimezoneList:
    type: "object"
    properties:
      result:
        type: "boolean"
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/TimezoneListResponse"

  TimezoneListResponse:
    type: "object"
    properties:
      tzId:
        type: "string"
        example: "1"
      name:
        type: "string"
        example: "(UTC+3) Minsk"
      default:
        type: "boolean"
        example: "true"
      tzText:
        type: "string"
        example: "(UTC+3) Minsk"
      tzOffset:
        type: "string"
        example: "+3"
      DST:
        type: "boolean"
        example: "true"
      SK:
        type: "string"
        example: "2"
      PK:
        type: "string"
        example: "LANGUAGE#"

  ReminderInitialData:
    type: "object"
    properties:
      result:
        type: "boolean"
        example: "true"
      message:
        type: "string"
        example: "Get is Success"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ReminderInitialDataResponse"

  ReminderInitialDataResponse:
    type: "object"
    properties:
      rDays:
        type: "string"
        example: "Monday"
      endDate:
        type: "string"
        example: "2021-12-31T00:00:00"
      subscriptionEndDate:
        type: "string"
        example: "2021-12-31T00:00:00"
      delivery:
        type: "string"
        example: "Download"
      endTime:
        type: "string"
        example: "+3"
      startTime:
        type: "string"
        example: "true"
      startDate:
        type: "string"
        example: "2021-06-04T15:30:00"
      currentTime:
        type: "string"
        example: "3:35:54 PM"
      currentDate:
        type: "string"
        example: "2021-06-11T12:35:54.731Z"
      SK:
        type: "string"
        example: "RID#1"
      PK:
        type: "string"
        example: "REMINDER#"
      reminderTypeList:
        $ref: "#/definitions/UserReminderTypeList"

  SetReminderSchema:
    type: "object"
    properties:
      result:
        type: "boolean"
        example: "true"
      message:
        type: "string"
        example: "Set reminder is success"
      data:
        type: "array"
        items:
          $ref: "#/definitions/SetReminderSchemaResponse"

  SetReminderSchemaResponse:
    type: "object"
    properties:
      rDays:
        type: "string"
        example: "Monday"
      endDate:
        type: "string"
        example: "2021-12-31T00:00:00"
      subscriptionEndDate:
        type: "string"
        example: "2021-12-31T00:00:00"
      delivery:
        type: "string"
        example: "Download"
      endTime:
        type: "string"
        example: "+3"
      startTime:
        type: "string"
        example: "true"
      startDate:
        type: "string"
        example: "2021-06-04T15:30:00"
      currentTime:
        type: "string"
        example: "3:35:54 PM"
      currentDate:
        type: "string"
        example: "2021-06-11T12:35:54.731Z"
      rType:
        type: "string"
        example: "2"
      url:
        type: "string"
        example: "www.google.com"
      SK:
        type: "string"
        example: "ID#4"
      PK:
        type: "string"
        example: "USR#ID#4"


externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"